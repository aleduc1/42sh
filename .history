fc -l
ls 1
ls 2
ls 3
ls -R /
fg
ls -l
jobs
ls 1
ls 2
ls 3
ls 4
ls 5
ls -l
ls -R /
echo AFTER
echo AFTER_AFTER
jobs
fg
fg
ls -l
ls -l
ls -l
ls
ls
ls
ok
fc -l
fc -l 10
fc -l -10
fc -l ls fc
fc -l 20 10
fc -lr 20 10
fc -lrn 20 10
fc -lrn 20 10
fc -lrn 20 10
fg
fg
fg
fg
fg
fg
ls
ls
ok
echo test
echo something
fc -l
ls 1
ls 2
ls 3
ls 4
ls 5
ls 6
ls 7
ls 8
ls 9
fc -l
ls 9
ls -l
ls 1
ls 2
ls 3
ls 4
ls 5
ls 6
ls 7
ls 8
ls 9
fc -l
fc -l 1
echo AFTER_AFTER
exit 99999999999999999999999999999999999999999999
exit 1 2 3
echo ${?}
fc -l
!61
fc -l
echo ${?}
exit 1 2 3
exit 99999999999999999999999999999999999999999999
fc -lrn 20 10
echo hello world
fc -ln
fc -lr
ls DOESNOTEXIST
ls DOESNOTEXIST
fc -l fc 1
ls -l
test -s author
echo $?
test 
make
make re
man test
test -b ertyui
fc
fc -1
fc -l 1
test sdfg
test -d sdfg
test dfgh
?
test auteur
?
man test
test -c author
?
test 1=1
?
man test
test salut=salut
test salut = salut
test salut -eq salut
test -eq salut salut
make
test -eq salut salut
test salut -eq salut
make
test salut -eq salut
mke
test salut -eq salut
test salut -eq salu
?
make
test salut -eq salu
test salut -eq salut
make
test -d sdfgh
test -d auteur
test -z
test -z dfgh
test -Z fghj
test -PFSF
test salut -eq salut
echo $?
test salut -eq salue
echo $?
exit
 ; ; ; ; ; ; ; ; ; 
posix
ls & 
test weyj -eq dfgh
?
mke
make
test weyj -eq dfgh
test erty -eq dfghjk
exit
touch read noread; chmod u-r noread
test -r read && echo ok || echo wrong
ls -l
exit
test -r read && echo ok || echo wrong
make
./42sh
test -r read && echo ok || echo wrong
ls -la
chmod 700 read
test -r read && echo ok || echo wrong
chmod 770 read
test -r read && echo ok || echo wrong
chmod 777 read
test -r read && echo ok || echo wrong
mke
make
test -r read && echo ok || echo wrong
exit
ls -l
test -d srcs
exit
test -d srcs
ls -l
rm -rf noread
touch read noread; chmod u-r noread
ls -l
rm read
rm noread
ls -l
touch read noread; chmod u-r noread
ls -l
test -r read
vim binary
ls -l
rm binary
ls -l
test -r read
exit
ls -l
test -r read
test -r noread
vim bina
vim binary
ls -l
rm binary
ls -l
exit
test -L /dev/null && echo ok || echo wrong
test -L /var && echo ok || echo wrong
exit
find /var/run -type s 2>/dev/null
socketfile=find /var/run -type s 2>/dev/null
unset socketfile
ls -l
set
socketfile=/var/run/.sim_diagnosticd_socket
test -S ${socketfile} && echo ok || echo wrong
exit
set
socketfile=/var/run/.sim_diagnosticd_socket
test -S ${socketfile} && echo ok || echo wrong
test -S /dev/null && echo ok || echo wrong
exit
ls -l
test 9312 -eq 9312
?
test 9312 -eq 9312e
?
test 9312 -eq 9312e
?
test 9312 -eq 9312e 2>&-
?
exit
xit
exit
test -d srcs
test -s author
test 9 -eq oasd
test 9 -eq 9
test 9 -eq o9
test 9 -eq 1239
test 9 != 1239
test 9 == 1239
test 9 = 1239
test 9 = 9
test 9 -eq oasd 2>&-
exit
ls -la & pwd
ls -la & pwd & ls &
ls
b | wc
jobs %base
fg
b | cat -e
b | cat -e &
ls
fg
cooucou]
echo \'coucou\'
ls -l
exit
echo adasa'ada"adsad'e"sup'qeqw"o"wo" 
exit
echo OwO"salu'j'adore"l'av'"ie"AhaExcellent
exit
echo OwO"salu'j'adore"l'av'"ie"AhaExcellent
make
echo OwO"salu'j'adore"l'av'"ie"AhaExcellent
make
echo OwO"salu'j'adore"l'av'"ie"AhaExcellent
make
echo OwO"salu'j'adore"l'av'"ie"AhaExcellent
make
echo OwO"salu'j'adore"l'av'"ie"AhaExcellent
make
echo OwO"salu'j'adore"l'av'"ie"AhaExcellent
exit
echo OwO"salu'j'adore"l'av'"ie"AhaExcellent
exit
echo OwO"salu'j'adore"l'av'"ie"AhaExcellent
exit
echo OwO"salu'j'adore"l'av'"ie"AhaExcellent
make
echo OwO"salu'j'adore"l'av'"ie"AhaExcellent
exit
echo OwO"salu'j'adore"l'av'"ie"AhaExcellent
exit
echo OwO"salu'j'adore"l'av'"ie"AhaExcellent
make
echo OwO"salu'j'adore"l'av'"ie"AhaExcellent
exit
echo "'$TERM'"
echo coucou"'$TERM'"'$TERM'"salut toi "la
echo coucou"'$TERM'"\'$TERM\'"salut toi "la
posix
exit
ls -l
ls -l
ls -l
ls -l
echo $EDITOR
echo $EDITOR
EDITOR=vim
EDITOR=vim
EDITOR=vim
fc -l
echo /ne
echo \ne
echo \neexit
extit
echo \ne
cat
vikm
vim
exit
echo \"j'adore le pain' "
echo \nebooo
ls -l
echo \"nebooo exit "
echo \nebooo
echo \"nebooo "
echo \>nebooo
echo a\>nebooo
echo a'\>nebooo'b
exit
echo \
echo \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
exit
